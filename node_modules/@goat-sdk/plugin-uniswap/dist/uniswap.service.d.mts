import { EVMWalletClient } from '@goat-sdk/wallet-evm';
import { CheckApprovalBodySchema, GetQuoteParameters } from './parameters.mjs';
import { UniswapCtorParams } from './types/UniswapCtorParams.mjs';
import '@goat-sdk/core';
import 'zod';

declare class UniswapService {
    private readonly params;
    constructor(params: UniswapCtorParams);
    private makeRequest;
    checkApproval(walletClient: EVMWalletClient, parameters: CheckApprovalBodySchema): Promise<{
        status: string;
        txHash?: undefined;
    } | {
        status: string;
        txHash: string;
    }>;
    getQuote(walletClient: EVMWalletClient, parameters: GetQuoteParameters): Promise<any>;
    getSwapTransaction(walletClient: EVMWalletClient, parameters: GetQuoteParameters): Promise<{
        txHash: string;
    }>;
}

export { UniswapService };
